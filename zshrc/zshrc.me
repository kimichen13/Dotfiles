
#!/bin/zsh
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/Users/kimichen/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="ys"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse nvm)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git emacs git-flow gradle mvn osx ruby sudo autojump docker zsh-autosuggestions enhancd zsh-wakatime)

[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"
export M2_HOME=~/Software/Maven
export GRADLE_HOME=~/Software/Gradle
export GRADLE_USER_HOME=~/.gradle
export SOFT_HOME=~/Software/bin
export EMACS="*term*"

export PATH=$JAVA_HOME/bin:$PATH
export PATH=$M2_HOME/bin:$PATH
export PATH=$GRADLE_HOME/bin:$PATH
export PATH=$SOFT_HOME:$PATH
export CLASSPATH=.:$JAVA_HOME/lib

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

export PATH="/usr/local/Homebrew/bin:$PATH"

# for Clojure
# export PATH=~/Software/Leiningen:$PATH

# For Flutter
export PATH=~/Github/flutter/bin:$PATH

# For Android
export ANDROID_HOME=/Users/kimichen/Library/Android/sdk



export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Fix 'command not found'.
export PATH=$PATH:$(npm prefix -g)/bin

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# Example aliases for emacs
#alias emacs="/usr/local/Cellar/emacs/27.1_1/bin/emacs -nw"
alias emacs="/usr/local/bin/emacs -nw"
# alias emacs="/Applications/Emacs.app/Contents/MacOS/Emacs -nw"
alias e='emacsclient -t'
alias ek='emacsclient -e "(kill-emacs)"'
alias es='emacs --daemon'
alias tospace='ln -sfn /Users/kimi/Github/Dotfiles/spacemacs ~/.emacs.d'
alias toorigin='ln -sfn /Users/kimi/Github/Dotfiles/emacs.d/ ~/.emacs.d'
alias topurcell='ln -sfn /Users/kimi/Github/Dotfiles/purcell.emacs ~/.emacs.d'
alias toemacs='ln -sfn /Users/kimichen/Github/kimi-emacs ~/.emacs.d'
alias todoom='ln -sfn /Users/kimichen/Github/doom-emacs ~/.emacs.d'

# docker
alias dockerkill='docker kill $(docker ps -a -q)'
alias dockercleanc='docker rm $(docker ps -a -q)'
alias dockercleani='docker rmi $(docker images -q -f dangling=true)'
alias dockerclean='dockercleanc || true && dockercleani'

# alias goproxy='export http_proxy=http://127.0.0.1:51837 https_proxy=http://127.0.0.1:51837'
alias goproxy='export https_proxy=http://127.0.0.1:6152;export http_proxy=http://127.0.0.1:6152;export all_proxy=socks5://127.0.0.1:6153'
alias disproxy='unset http_proxy https_proxy'

# git rm --cached
alias ignore='git rm --cached $1'

## For t2Emop Proxy Tunnel
alias t2emop_on='ssh -fN t2emop-proxy'
alias t2emop_check='ssh -O check t2emop-proxy'
alias t2emop_off='ssh -O exit t2emop-proxy'

## For prodEmop Proxy Tunnel
alias prodemop_on='ssh -fN prodemop-proxy'
alias prodemop_check='ssh -O check prodemop-proxy'
alias prodemop_off='ssh -O exit prodemop-proxy'

alias t2emopproxy='export http_proxy=http://127.0.0.1:1078 https_proxy=http://127.0.0.1:1078'
alias prodemopproxy='export http_proxy=http://127.0.0.1:1079 https_proxy=http://127.0.0.1:1079'

export PATH="/usr/local/opt/kibana@6/bin:$PATH"
# alias ssh="assh wrapper ssh --"
alias k=kubectl

# alias mod='bc <<< $1/100%8+1'
# alias mod='bc <<< (("$1"/100%8+1))'
